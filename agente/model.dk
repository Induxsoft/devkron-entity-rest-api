#include "dkli.dkh"
#!

module "agente.dk"
{
    @read_query="select 
        sys_pk, sys_guid, sys_recver, sys_timestamp, sys_dtcreated, sys_deleted, 
        codigo, codnomina, pcomision, email, nombre, telefono, domicilio1
        from agente where #<@keyfield>=@_entity_id limit 1;"


   agente.read::&db,&params
    {
        ref agente=entity.read(db,params)
        agente<"domicilio*">:dbr.rec(db,"select codpos,colonia,direccion,telefonos,sys_pk,sys_recver,iciudad from domicilio where sys_pk=@domicilio1",agente)
        agente<"ciudad*">:dbr.rec(db,"select codigo,nombre,sys_pk,sys_recver,estado from ciudad where sys_pk=@iciudad",@@(agente,"&domicilio"))
        agente<"estado*">:dbr.rec(db,"select codigo,nombre,IPais,sys_pk,sys_recver from edoprov where sys_pk=@estado",@@(agente,"&ciudad"))
        agente<"pais*">:dbr.rec(db,"select codigo,nombre,sys_pk,sys_recver from pais where sys_pk=@IPais",@@(agente,"&estado"))

        return  agente
    }

    agente.create::&db,&params,&data
    {
    	@use_transaction=@false
    	do dbr.begin(db)
    		if not(isnull(@@(data,"&domicilio")))
	        {
	            ref domicilio=dbr.save(db,"domicilio",@@(data,"&domicilio"))
	            data<"domicilio1">:@@(domicilio,"sys_pk")
	            do field.remove(data,"domicilio")
	        }
	        if not(isnull(@@(data,"&ciudad"))){do field.remove(data,"ciudad")}
	        if not(isnull(@@(data,"&estado"))){do field.remove(data,"estado")}
	        if not(isnull(@@(data,"&pais"))){do field.remove(data,"pais")}
	        ref res= entity.create(db,params,data)
    	do dbr.commit(db)
    	return res
    	exception
    	{
    		if dbr.in_transaction(db) {do dbr.rollback(db)}
    		do rise_error(500,last_error())
    	}
    }

    agente.update::&db,&params,&data
    {
        if not(isnull(@@(data,"&domicilio")))
        {
            ref domicilio=dbr.save(db,"domicilio",@@(data,"&domicilio"))
            data<"domicilio1">:@@(domicilio,"sys_pk")
            do field.remove(data,"domicilio")
        }
        return entity.update(db,params,data)
    }

    agente.delete::&db,table_name,sys_pk
    {	
    	@keyfield="sys_pk"
    	 new params
    	 {
    	 	@"_entity_id":sys_pk
    	 	@"_entities_type":table_name
    	 }
    	 ref agente=entity.read(db,params)
    	 do dbr.delete(db,table_name,"sys_pk=@_entity_id",params)
    	 do dbr.delete(db,"domicilio","sys_pk=@domicilio1",agente)
        
    }

    point @read to agente.read
    point @create to agente.create
    point @update to agente.update
    point @delete to agente.delete
}