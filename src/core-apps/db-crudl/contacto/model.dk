#include "dkli.dkh"
#!
module "contacto.dk"{
    @read_query = "select sys_pk, sys_guid, sys_recver, sys_timestamp, sys_dtcreated, sys_deleted, 
    Tratamiento,Nombre,Apellidos,Empresa,Puesto,Tel1,eMail1,WebSite,Domicilio1
    from contacto where #<@keyfield>=@_entity_id limit 1;"
    
    contacto.read::&db,&params{
        ref contacto=entity.read(db,params)
        contacto<"domicilio*">:dbr.rec(db,"select codpos,colonia,direccion,notas,telefonos,sys_pk,sys_recver,iciudad from domicilio where sys_pk=@domicilio1",contacto)
        contacto<"ciudad*">:dbr.rec(db,"select codigo,codigotel,nombre,sys_pk,sys_recver,Estado from ciudad where sys_pk=@iciudad",@@(contacto,"&domicilio"))
        contacto<"estado*">:dbr.rec(db,"select codigo,nombre,IPais,sys_pk,sys_recver from edoprov where sys_pk=@estado",@@(contacto,"&ciudad"))
        contacto<"pais*">:dbr.rec(db,"select codigo,codigotel,nombre,sys_pk,sys_recver from pais where sys_pk=@IPais",@@(contacto,"&estado"))
        return contacto
    }
    contacto.create::&db,&params,&data{
    	@use_transaction=@false
    	do dbr.begin(db) 
    		if not(isnull(@@(data,"&domicilio"))){
	            ref domicilio=dbr.save(db,"domicilio",@@(data,"&domicilio")) 
	            data<"domicilio1">:@@(domicilio,"sys_pk")
	            do field.remove(data,"domicilio")
	        }
	        if not(isnull(@@(data,"&ciudad"))){
                do field.remove(data,"ciudad")
            }
	        if not(isnull(@@(data,"&estado"))){
                do field.remove(data,"estado")
            }
	        if not(isnull(@@(data,"&pais"))){
                do field.remove(data,"pais")
            }
	        ref res= entity.create(db,params,data)
    	do dbr.commit(db) 
    	return res
    	exception
    	{
    		if dbr.in_transaction(db) {
                do dbr.rollback(db) 
            }
    		do rise_error(500,last_error())
    	}
    }
    point @read to contacto.read
    point @create to contacto.create
}